<?xml version="1.0" encoding="UTF-8"?>
<project name="ProcessCore" basedir="." default="dist">
	<description>Modul Core</description>
	<property environment="env" />
	<property file="${env.TASK_HOME}/config.properties" />
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />
	<property name="cfg" location="cfg" />
	<property name="vm" location="vm" />
	<property name="cs" location="cs" />
	<property name="jdocs" location="jdocs" />
	<property name="build.test" location="buildtest" />
	<property name="src.test" location="test" />

	<path id="build.classpath">
		<fileset dir="${common.lib}" />
	</path>

	<path id="liquibase.classpath">
		<fileset dir="${lib}" />
		<path path="${basedir}/db" />
	</path>

	<taskdef resource="cactus.tasks">
		<classpath>
			<fileset dir="${common.lib}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<taskdef resource="checkstyletask.properties" classpath="${common.lib}/checkstyle-5.3-all.jar" />


	<target name="init">
		<tstamp />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${build.test}" />
		<mkdir dir="${jdocs}" />
	</target>


	<target name="checkstyle">
		<!--<checkstyle config="${cs}/cs.xml" failonviolation="true">
			<fileset dir="${src}" includes="**/*.java"/>
		</checkstyle>-->
	</target>

	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="build.classpath" />
		<pmd shortFilenames="true">
			<ruleset>basic</ruleset>
			<ruleset>unusedcode</ruleset>
			<ruleset>typeresolution</ruleset>
			<ruleset>strings</ruleset>
			<ruleset>strictexception</ruleset>
			<ruleset>naming</ruleset>
			<ruleset>imports</ruleset>
			<ruleset>design</ruleset>
			<ruleset>coupling</ruleset>
			<ruleset>codesize</ruleset>
			<ruleset>braces</ruleset>
			<formatter type="html" toFile="${dist}/pmd_report.html" linkPrefix="http://pmd.sourceforge.net/xref/" />
			<fileset dir="${src}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
	</target>


	<path id="jdbc.classpath">
		<fileset dir="${common.lib}" />
	</path>

	<target name="setup-email">
		<sql driver="${db.jdbc.driverClassName}" url="${db.jdbc.url}" userid="${db.jdbc.username}" password="${db.jdbc.password}" autocommit="true">
			<classpath refid="jdbc.classpath" />
			<![CDATA[
				DELETE FROM configuration_items WHERE config_key='application.mail.from';
				DELETE FROM configuration_items WHERE config_key='smtp.user';
				DELETE FROM configuration_items WHERE config_key='smtp.port';
				DELETE FROM configuration_items WHERE config_key='smtp.host';
				DELETE FROM configuration_items WHERE config_key='smtp.password';
				DELETE FROM configuration_items WHERE config_key='application.url';
				INSERT INTO configuration_items (config_key, config_value) VALUES ('application.mail.from','${mail.from}');
				INSERT INTO configuration_items (config_key, config_value) VALUES ('smtp.user','${mail.smtp.user}');
				INSERT INTO configuration_items (config_key, config_value) VALUES ('smtp.port', '${mail.smtp.port}');
				INSERT INTO configuration_items (config_key, config_value) VALUES ('smtp.host','${mail.smtp.host}');
				INSERT INTO configuration_items (config_key, config_value) VALUES ('smtp.password','${mail.smtp.password}');
				INSERT INTO configuration_items (config_key, config_value) VALUES ('application.url','${application.url}');
            ]]>
		</sql>
	</target>


	<target name="setup-admin-password">

		<input message="Podaj hasło super-użytkownika" addproperty="super.passwd" defaultvalue="super321" />

		<sql driver="${db.jdbc.driverClassName}" url="${db.jdbc.url}" userid="${db.jdbc.username}" password="${db.jdbc.password}"
			autocommit="true">
			<classpath refid="jdbc.classpath" />
			<![CDATA[
				DELETE FROM configuration_items WHERE config_key='__super__';
				INSERT INTO configuration_items (config_key, config_value) VALUES ('__super__',md5('${super.passwd}'));
            ]]>
		</sql>
	</target>

	<target name="docs" depends="init">
		<javadoc destdir="${jdocs}" sourcepath="${src}" packagenames="core.*">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javadoc>
	</target>



	<target name="copy-libs">
		<copydir dest="${glassfish.lib}" src="${lib}" />
	</target>

	<target name="copy-templates">
		<copydir dest="${build}" src="${vm}" />
	</target>

	<target name="compile" depends="init, checkstyle, pmd">
		<javac srcdir="${src}" destdir="${build}" debug="true">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="compile-test" depends="dist">
		<javac srcdir="${src.test}" destdir="${build.test}" debug="true">
			<classpath>
				<fileset dir="${dist}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="prepare-tests" depends="compile-test">
		<cactifywar context="/CoreTests" version="2.3" destfile="${dist}/CoreTests.war">
			<classes dir="${build.test}" />
		</cactifywar>
		<copy file="${cfg}/log4j.xml" todir="${build.test}">
		</copy>
		<echo>Utworzono Testy do -> ${ant.project.name}.jar</echo>
	</target>


	<target name="prepare-liquibase">
		<taskdef resource="liquibasetasks.properties">
			<classpath refid="build.classpath" />
		</taskdef>

	</target>

	<target name="update-database" depends="prepare-liquibase">
		<updateDatabase changeLogFile="${db.changelog.file}" driver="${db.jdbc.driverClassName}" url="${db.jdbc.url}" username="${db.jdbc.username}" password="${db.jdbc.password}" classpathref="liquibase.classpath" />
	</target>

	<target name="dist" depends="compile, copy-templates">
		<jar jarfile="${dist}/${ant.project.name}.jar" basedir="${build}">
			<metainf dir="${cfg}">
				<include name="persistence.xml" />
			</metainf>
		</jar>
		<echo>Utworzono  -> ${ant.project.name}.jar</echo>
	</target>

	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${jdocs}" />
	</target>

</project>
